int prim(int start) {
    int total = 0;
   bool intree[100];
    for( int i=0; i<N; i++ ) {
        intree[i] = false;
    }
   int n = start;
    while( !intree[n] ) {
        intree[n] = true;
     int w = 1000000; // Infinite
        int min = -1;
        int min_next;
        for( int i=0; i<graph.size(); i++ ) {
            if( graph[i].second.first == n || graph[i].second.second == n ) { 
                int next;
                if( graph[i].second.first == n ) next = graph[i].second.second;
                else next = graph[i].second.first;
               if( !intree[next] && graph[i].first<w ) {
                    w = graph[i].first;
                    min =  i;
                    min_next = next;
                }
            }
        }
       
if(min != -1 ) 
 n = min_next;
            mst.push_back( graph[min] );
            total += graph[min].first;
        }
    }
  return total;    
}
